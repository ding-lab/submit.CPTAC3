
# Output data from WXS-Germline pipeline has name such as,
#   C3L-00010.maf
# Analyses uses normal WXS hg19 data

# TODO: split now by disease, so don't need step 6

# Manifest columns
# * cancer
# * case_ID
# * input_experimental_strategy
# * input_submitter_id
# * input_UUID
# * reference_version
# * file_type
# * file_name
# * file_size
# * md5sum

OUTD="manifest"; mkdir -p $OUTD

SR="/gscuser/mwyczalk/projects/CPTAC3/import.preliminary/SR/SR_merged.dat"
BM="/gscuser/mwyczalk/projects/CPTAC3/import.CPTAC3b1/BamMap/CPTAC3.b1.WXS.BamMap.dat"

OUT="$OUTD/WXS-Germline.CPTAC3.b1.manifest.dat"

# Where Song deposited result data, filename e.g., C3L-00010.maf
DATD="/gscmnt/gc2521/dinglab/scao/cptac3/wxs/germline_per_sample"

function process_case {
CASE=$1

CANCER=$(cut -f 1,2 $SR | grep $CASE | cut -f 2 | sort -u)
SOURCE_ES="WXS"
REF="hg19"

# Taking advantage of logic used to build sample name, which separates tumor and normal. E.g.,
# C3L-00010.WXS.T
# C3L-00010.WXS.N

ISN="${CASE}.WXS.N" # Input Sample Name
IUUID=$(grep $ISN $BM | cut -f 9)
IFN=$(grep $ISN $BM | cut -f 6 | xargs basename )

SSID=$(echo $IFN | cut -f 1 -d .)
 

# Constructing FN as generated by analysis
FILETYPE="maf"

#   `Somatic.WXS/C3L-00010.maf
FN="${CASE}.maf"
LFN="$DATD/${FN}"
if [ ! -e $LFN ] ; then
    echo $LFN does not exist
    exit
fi
SIZE=$(stat --printf="%s" $LFN)
MD5=$(md5sum $LFN | cut -f 1 -d ' ')

printf "$CANCER\t$CASE\t$SOURCE_ES\t$IFN\t$IUUID\t$REF\t$FILETYPE\t$FN\t$SIZE\t$MD5\n" >> $OUT
}


printf "cancer\tcase_ID\tinput_experimental_strategy\tinput_submitter_id\tinput_UUID\treference_version\tfile_type\tfile_name\tfile_size\tmd5sum\n" > $OUT

while read CASE; do

[[ $CASE = \#* ]] && continue  # Skip commented out entries
>&2 echo Processing $CASE

process_case $CASE

done < <(grep -v "^#" $BM | cut -f 2 | sort -u)  # pull out all case IDs out of BamMap and loop through them

echo Written to $OUT
